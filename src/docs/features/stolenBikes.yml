/stolen-bikes:
  get:
    summary: List all stolen bikes
    tags:
      - Stolen bikes
    security:
      - JWT: []
    parameters:
      - in: query
        name: page
        schema:
          type: integer
        description: The page number to query. API default value is 1
      - in: query
        name: pageSize
        schema:
          type: integer
        description: The number of items to return. API default value is 10<br><br> In case you want to gell all stolen bikes in one page, set pageSize to -1.
      - in: query
        name: licenseNumber
        schema:
          type: string
          minLength: 5
          maxLength: 20
        description: license number of a stolen bike
      - in: query
        name: date
        schema:
          type: date-format
        example: 2022-04-08
        description: date of theft. It has iso format YYYY-MM-DD
      - in: query
        name: status
        schema:
          type: string
          enum: [IN PROCESS, UNASSIGNED]
        description: status of the stolen bike
      - in: query
        name: bikeOwnerId
        schema:
          type: string
        description: must have a length of 24 chars as mongoose ObjectId

    responses:
      200:
        description: A paginated response from stolen bikes
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: "#/components/responses/Pagination"
                - properties:
                    data:
                      type: array
                      items:
                        $ref: "#/components/schemas/StolenBike"

      401:
        content:
          application/json:
            schema:
              $ref: "#/components/UnauthorizedError"
      403:
        description: A bike owner does not have access
        content:
          application/json:
            schema:
              $ref: "#/components/ForbiddenError"

      422:
        description: Query params validation fails
        content:
          application/json:
            schema:
              $ref: "#/components/ValidationError"

      500:
        content:
          application/json:
            schema:
              $ref: "#/components/ServerError"

  post:
    summary: Create a stolen bike for any logged-in user
    description: It is necessary to indicate bikeOwnerId in request body, if user does have not role bike owner
    tags:
      - Stolen bikes
    security:
      - JWT: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/requestBodies/StolenBike"
    responses:
      201:
        description: Stolen Bike successfully created
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StolenBike"
      401:
        content:
          application/json:
            schema:
              $ref: "#/components/UnauthorizedError"
      403:
        content:
          application/json:
            schema:
              $ref: "#/components/ForbiddenError"
      422:
        content:
          application/json:
            schema:
              $ref: "#/components/ValidationError"
